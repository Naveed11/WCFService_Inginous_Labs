//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFService.MachineEyes {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sheds", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class Sheds : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.currentShift CurrentShiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShedIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.ShedSummary shedSummaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.currentShift CurrentShift {
            get {
                return this.CurrentShiftField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentShiftField, value) != true)) {
                    this.CurrentShiftField = value;
                    this.RaisePropertyChanged("CurrentShift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShedID {
            get {
                return this.ShedIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ShedIDField, value) != true)) {
                    this.ShedIDField = value;
                    this.RaisePropertyChanged("ShedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShedName {
            get {
                return this.ShedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShedNameField, value) != true)) {
                    this.ShedNameField = value;
                    this.RaisePropertyChanged("ShedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.ShedSummary shedSummary {
            get {
                return this.shedSummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.shedSummaryField, value) != true)) {
                    this.shedSummaryField = value;
                    this.RaisePropertyChanged("shedSummary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="currentShift", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class currentShift : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoOfShiftsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShiftNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ShiftStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WShiftField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoOfShifts {
            get {
                return this.NoOfShiftsField;
            }
            set {
                if ((this.NoOfShiftsField.Equals(value) != true)) {
                    this.NoOfShiftsField = value;
                    this.RaisePropertyChanged("NoOfShifts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShiftName {
            get {
                return this.ShiftNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShiftNameField, value) != true)) {
                    this.ShiftNameField = value;
                    this.RaisePropertyChanged("ShiftName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ShiftStartDate {
            get {
                return this.ShiftStartDateField;
            }
            set {
                if ((this.ShiftStartDateField.Equals(value) != true)) {
                    this.ShiftStartDateField = value;
                    this.RaisePropertyChanged("ShiftStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WShift {
            get {
                return this.WShiftField;
            }
            set {
                if ((object.ReferenceEquals(this.WShiftField, value) != true)) {
                    this.WShiftField = value;
                    this.RaisePropertyChanged("WShift");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShedSummary", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class ShedSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.CollectiveSummary collectiveSummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.LongStopSummary longSummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.ShortStopSummary shortSummaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.CollectiveSummary collectiveSummary {
            get {
                return this.collectiveSummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.collectiveSummaryField, value) != true)) {
                    this.collectiveSummaryField = value;
                    this.RaisePropertyChanged("collectiveSummary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.LongStopSummary longSummary {
            get {
                return this.longSummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.longSummaryField, value) != true)) {
                    this.longSummaryField = value;
                    this.RaisePropertyChanged("longSummary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.ShortStopSummary shortSummary {
            get {
                return this.shortSummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.shortSummaryField, value) != true)) {
                    this.shortSummaryField = value;
                    this.RaisePropertyChanged("shortSummary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CollectiveSummary", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class CollectiveSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EfficiencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LongStoppedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProductionEfficiencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RPMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RunningLoomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShortStoppedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalLoomsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Efficiency {
            get {
                return this.EfficiencyField;
            }
            set {
                if ((this.EfficiencyField.Equals(value) != true)) {
                    this.EfficiencyField = value;
                    this.RaisePropertyChanged("Efficiency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LongStopped {
            get {
                return this.LongStoppedField;
            }
            set {
                if ((this.LongStoppedField.Equals(value) != true)) {
                    this.LongStoppedField = value;
                    this.RaisePropertyChanged("LongStopped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ProductionEfficiency {
            get {
                return this.ProductionEfficiencyField;
            }
            set {
                if ((this.ProductionEfficiencyField.Equals(value) != true)) {
                    this.ProductionEfficiencyField = value;
                    this.RaisePropertyChanged("ProductionEfficiency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RPM {
            get {
                return this.RPMField;
            }
            set {
                if ((this.RPMField.Equals(value) != true)) {
                    this.RPMField = value;
                    this.RaisePropertyChanged("RPM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RunningLooms {
            get {
                return this.RunningLoomsField;
            }
            set {
                if ((this.RunningLoomsField.Equals(value) != true)) {
                    this.RunningLoomsField = value;
                    this.RaisePropertyChanged("RunningLooms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShortStopped {
            get {
                return this.ShortStoppedField;
            }
            set {
                if ((this.ShortStoppedField.Equals(value) != true)) {
                    this.ShortStoppedField = value;
                    this.RaisePropertyChanged("ShortStopped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalLooms {
            get {
                return this.TotalLoomsField;
            }
            set {
                if ((this.TotalLoomsField.Equals(value) != true)) {
                    this.TotalLoomsField = value;
                    this.RaisePropertyChanged("TotalLooms");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LongStopSummary", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class LongStopSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ArticleChange_LossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ArticleChange_StoppedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Electrical_LossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Electrical_StoppedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Knotting_LossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Knotting_StoppedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Mechanical_LossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Mechanical_StoppedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OtherLong_LossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OtherLong_StoppedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProgramNA_LossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProgramNA_StoppedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ShutDown_LossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ShutDown_StoppedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Total_LossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Total_StoppedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ArticleChange_Loss {
            get {
                return this.ArticleChange_LossField;
            }
            set {
                if ((this.ArticleChange_LossField.Equals(value) != true)) {
                    this.ArticleChange_LossField = value;
                    this.RaisePropertyChanged("ArticleChange_Loss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ArticleChange_Stopped {
            get {
                return this.ArticleChange_StoppedField;
            }
            set {
                if ((this.ArticleChange_StoppedField.Equals(value) != true)) {
                    this.ArticleChange_StoppedField = value;
                    this.RaisePropertyChanged("ArticleChange_Stopped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Electrical_Loss {
            get {
                return this.Electrical_LossField;
            }
            set {
                if ((this.Electrical_LossField.Equals(value) != true)) {
                    this.Electrical_LossField = value;
                    this.RaisePropertyChanged("Electrical_Loss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Electrical_Stopped {
            get {
                return this.Electrical_StoppedField;
            }
            set {
                if ((this.Electrical_StoppedField.Equals(value) != true)) {
                    this.Electrical_StoppedField = value;
                    this.RaisePropertyChanged("Electrical_Stopped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Knotting_Loss {
            get {
                return this.Knotting_LossField;
            }
            set {
                if ((this.Knotting_LossField.Equals(value) != true)) {
                    this.Knotting_LossField = value;
                    this.RaisePropertyChanged("Knotting_Loss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Knotting_Stopped {
            get {
                return this.Knotting_StoppedField;
            }
            set {
                if ((this.Knotting_StoppedField.Equals(value) != true)) {
                    this.Knotting_StoppedField = value;
                    this.RaisePropertyChanged("Knotting_Stopped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Mechanical_Loss {
            get {
                return this.Mechanical_LossField;
            }
            set {
                if ((this.Mechanical_LossField.Equals(value) != true)) {
                    this.Mechanical_LossField = value;
                    this.RaisePropertyChanged("Mechanical_Loss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Mechanical_Stopped {
            get {
                return this.Mechanical_StoppedField;
            }
            set {
                if ((this.Mechanical_StoppedField.Equals(value) != true)) {
                    this.Mechanical_StoppedField = value;
                    this.RaisePropertyChanged("Mechanical_Stopped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OtherLong_Loss {
            get {
                return this.OtherLong_LossField;
            }
            set {
                if ((this.OtherLong_LossField.Equals(value) != true)) {
                    this.OtherLong_LossField = value;
                    this.RaisePropertyChanged("OtherLong_Loss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OtherLong_Stopped {
            get {
                return this.OtherLong_StoppedField;
            }
            set {
                if ((this.OtherLong_StoppedField.Equals(value) != true)) {
                    this.OtherLong_StoppedField = value;
                    this.RaisePropertyChanged("OtherLong_Stopped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ProgramNA_Loss {
            get {
                return this.ProgramNA_LossField;
            }
            set {
                if ((this.ProgramNA_LossField.Equals(value) != true)) {
                    this.ProgramNA_LossField = value;
                    this.RaisePropertyChanged("ProgramNA_Loss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ProgramNA_Stopped {
            get {
                return this.ProgramNA_StoppedField;
            }
            set {
                if ((this.ProgramNA_StoppedField.Equals(value) != true)) {
                    this.ProgramNA_StoppedField = value;
                    this.RaisePropertyChanged("ProgramNA_Stopped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ShutDown_Loss {
            get {
                return this.ShutDown_LossField;
            }
            set {
                if ((this.ShutDown_LossField.Equals(value) != true)) {
                    this.ShutDown_LossField = value;
                    this.RaisePropertyChanged("ShutDown_Loss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ShutDown_Stopped {
            get {
                return this.ShutDown_StoppedField;
            }
            set {
                if ((this.ShutDown_StoppedField.Equals(value) != true)) {
                    this.ShutDown_StoppedField = value;
                    this.RaisePropertyChanged("ShutDown_Stopped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Total_Loss {
            get {
                return this.Total_LossField;
            }
            set {
                if ((this.Total_LossField.Equals(value) != true)) {
                    this.Total_LossField = value;
                    this.RaisePropertyChanged("Total_Loss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Total_Stopped {
            get {
                return this.Total_StoppedField;
            }
            set {
                if ((this.Total_StoppedField.Equals(value) != true)) {
                    this.Total_StoppedField = value;
                    this.RaisePropertyChanged("Total_Stopped");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShortStopSummary", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class ShortStopSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LenoLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LenoStopsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LenoperHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OtherLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OtherStopsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OtherperHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalStopsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalperHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WarpAvgKnotTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WarpLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WarpStopsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WarpperHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeftAvgKnotTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeftLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WeftStopsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeftperHourField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LenoLoss {
            get {
                return this.LenoLossField;
            }
            set {
                if ((this.LenoLossField.Equals(value) != true)) {
                    this.LenoLossField = value;
                    this.RaisePropertyChanged("LenoLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LenoStops {
            get {
                return this.LenoStopsField;
            }
            set {
                if ((this.LenoStopsField.Equals(value) != true)) {
                    this.LenoStopsField = value;
                    this.RaisePropertyChanged("LenoStops");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LenoperHour {
            get {
                return this.LenoperHourField;
            }
            set {
                if ((this.LenoperHourField.Equals(value) != true)) {
                    this.LenoperHourField = value;
                    this.RaisePropertyChanged("LenoperHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OtherLoss {
            get {
                return this.OtherLossField;
            }
            set {
                if ((this.OtherLossField.Equals(value) != true)) {
                    this.OtherLossField = value;
                    this.RaisePropertyChanged("OtherLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OtherStops {
            get {
                return this.OtherStopsField;
            }
            set {
                if ((this.OtherStopsField.Equals(value) != true)) {
                    this.OtherStopsField = value;
                    this.RaisePropertyChanged("OtherStops");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OtherperHour {
            get {
                return this.OtherperHourField;
            }
            set {
                if ((this.OtherperHourField.Equals(value) != true)) {
                    this.OtherperHourField = value;
                    this.RaisePropertyChanged("OtherperHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalLoss {
            get {
                return this.TotalLossField;
            }
            set {
                if ((this.TotalLossField.Equals(value) != true)) {
                    this.TotalLossField = value;
                    this.RaisePropertyChanged("TotalLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalStops {
            get {
                return this.TotalStopsField;
            }
            set {
                if ((this.TotalStopsField.Equals(value) != true)) {
                    this.TotalStopsField = value;
                    this.RaisePropertyChanged("TotalStops");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalperHour {
            get {
                return this.TotalperHourField;
            }
            set {
                if ((this.TotalperHourField.Equals(value) != true)) {
                    this.TotalperHourField = value;
                    this.RaisePropertyChanged("TotalperHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WarpAvgKnotTime {
            get {
                return this.WarpAvgKnotTimeField;
            }
            set {
                if ((this.WarpAvgKnotTimeField.Equals(value) != true)) {
                    this.WarpAvgKnotTimeField = value;
                    this.RaisePropertyChanged("WarpAvgKnotTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WarpLoss {
            get {
                return this.WarpLossField;
            }
            set {
                if ((this.WarpLossField.Equals(value) != true)) {
                    this.WarpLossField = value;
                    this.RaisePropertyChanged("WarpLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WarpStops {
            get {
                return this.WarpStopsField;
            }
            set {
                if ((this.WarpStopsField.Equals(value) != true)) {
                    this.WarpStopsField = value;
                    this.RaisePropertyChanged("WarpStops");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WarpperHour {
            get {
                return this.WarpperHourField;
            }
            set {
                if ((this.WarpperHourField.Equals(value) != true)) {
                    this.WarpperHourField = value;
                    this.RaisePropertyChanged("WarpperHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WeftAvgKnotTime {
            get {
                return this.WeftAvgKnotTimeField;
            }
            set {
                if ((this.WeftAvgKnotTimeField.Equals(value) != true)) {
                    this.WeftAvgKnotTimeField = value;
                    this.RaisePropertyChanged("WeftAvgKnotTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WeftLoss {
            get {
                return this.WeftLossField;
            }
            set {
                if ((this.WeftLossField.Equals(value) != true)) {
                    this.WeftLossField = value;
                    this.RaisePropertyChanged("WeftLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WeftStops {
            get {
                return this.WeftStopsField;
            }
            set {
                if ((this.WeftStopsField.Equals(value) != true)) {
                    this.WeftStopsField = value;
                    this.RaisePropertyChanged("WeftStops");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WeftperHour {
            get {
                return this.WeftperHourField;
            }
            set {
                if ((this.WeftperHourField.Equals(value) != true)) {
                    this.WeftperHourField = value;
                    this.RaisePropertyChanged("WeftperHour");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientListInfo", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class ClientListInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SocketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeWhenConnectionEstablishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeWhenDataReceivedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataNumber {
            get {
                return this.DataNumberField;
            }
            set {
                if ((this.DataNumberField.Equals(value) != true)) {
                    this.DataNumberField = value;
                    this.RaisePropertyChanged("DataNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Handle {
            get {
                return this.HandleField;
            }
            set {
                if ((object.ReferenceEquals(this.HandleField, value) != true)) {
                    this.HandleField = value;
                    this.RaisePropertyChanged("Handle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Socket {
            get {
                return this.SocketField;
            }
            set {
                if ((object.ReferenceEquals(this.SocketField, value) != true)) {
                    this.SocketField = value;
                    this.RaisePropertyChanged("Socket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeWhenConnectionEstablished {
            get {
                return this.TimeWhenConnectionEstablishedField;
            }
            set {
                if ((this.TimeWhenConnectionEstablishedField.Equals(value) != true)) {
                    this.TimeWhenConnectionEstablishedField = value;
                    this.RaisePropertyChanged("TimeWhenConnectionEstablished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeWhenDataReceived {
            get {
                return this.TimeWhenDataReceivedField;
            }
            set {
                if ((this.TimeWhenDataReceivedField.Equals(value) != true)) {
                    this.TimeWhenDataReceivedField = value;
                    this.RaisePropertyChanged("TimeWhenDataReceived");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoomCollectiveInfo", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class LoomCollectiveInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.loomcurrentParams CurrentParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.FixedStatistics FixedParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.loomShiftParams PastShiftParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.loompersonalInfo PersonalInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.loomSessionParams SessionParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.loomShiftParams ShiftParamsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.loomcurrentParams CurrentParams {
            get {
                return this.CurrentParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentParamsField, value) != true)) {
                    this.CurrentParamsField = value;
                    this.RaisePropertyChanged("CurrentParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.FixedStatistics FixedParameters {
            get {
                return this.FixedParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.FixedParametersField, value) != true)) {
                    this.FixedParametersField = value;
                    this.RaisePropertyChanged("FixedParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.loomShiftParams PastShiftParams {
            get {
                return this.PastShiftParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.PastShiftParamsField, value) != true)) {
                    this.PastShiftParamsField = value;
                    this.RaisePropertyChanged("PastShiftParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.loompersonalInfo PersonalInfo {
            get {
                return this.PersonalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalInfoField, value) != true)) {
                    this.PersonalInfoField = value;
                    this.RaisePropertyChanged("PersonalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.loomSessionParams SessionParams {
            get {
                return this.SessionParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionParamsField, value) != true)) {
                    this.SessionParamsField = value;
                    this.RaisePropertyChanged("SessionParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.loomShiftParams ShiftParams {
            get {
                return this.ShiftParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ShiftParamsField, value) != true)) {
                    this.ShiftParamsField = value;
                    this.RaisePropertyChanged("ShiftParams");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoomSumUpInfo", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class LoomSumUpInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EfficiencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.enMachineLongCause LongCauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoomCardNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoomNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RPMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Session_ActualStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.enMachineShortCause ShortCauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.enMachineState StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeaverIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Efficiency {
            get {
                return this.EfficiencyField;
            }
            set {
                if ((this.EfficiencyField.Equals(value) != true)) {
                    this.EfficiencyField = value;
                    this.RaisePropertyChanged("Efficiency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.enMachineLongCause LongCause {
            get {
                return this.LongCauseField;
            }
            set {
                if ((this.LongCauseField.Equals(value) != true)) {
                    this.LongCauseField = value;
                    this.RaisePropertyChanged("LongCause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoomCardNo {
            get {
                return this.LoomCardNoField;
            }
            set {
                if ((object.ReferenceEquals(this.LoomCardNoField, value) != true)) {
                    this.LoomCardNoField = value;
                    this.RaisePropertyChanged("LoomCardNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoomName {
            get {
                return this.LoomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoomNameField, value) != true)) {
                    this.LoomNameField = value;
                    this.RaisePropertyChanged("LoomName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAC {
            get {
                return this.MACField;
            }
            set {
                if ((object.ReferenceEquals(this.MACField, value) != true)) {
                    this.MACField = value;
                    this.RaisePropertyChanged("MAC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RPM {
            get {
                return this.RPMField;
            }
            set {
                if ((this.RPMField.Equals(value) != true)) {
                    this.RPMField = value;
                    this.RaisePropertyChanged("RPM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.DateTime Session_ActualStartTime {
            get {
                return this.Session_ActualStartTimeField;
            }
            set {
                if ((this.Session_ActualStartTimeField.Equals(value) != true)) {
                    this.Session_ActualStartTimeField = value;
                    this.RaisePropertyChanged("Session_ActualStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.enMachineShortCause ShortCause {
            get {
                return this.ShortCauseField;
            }
            set {
                if ((this.ShortCauseField.Equals(value) != true)) {
                    this.ShortCauseField = value;
                    this.RaisePropertyChanged("ShortCause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.enMachineState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeaverID {
            get {
                return this.WeaverIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WeaverIDField, value) != true)) {
                    this.WeaverIDField = value;
                    this.RaisePropertyChanged("WeaverID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="loomcurrentParams", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class loomcurrentParams : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ContinuesRunningSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CounterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CounterTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.CounterState CurrentCounterStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Current_PicksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Current_RPMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Current_SinkIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Current_SinkTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.enMachineState Current_StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.enMachineLongCause LongStopCauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Session_ActualStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.enMachineShortCause ShortStopCauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SinkNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ContinuesRunningSeconds {
            get {
                return this.ContinuesRunningSecondsField;
            }
            set {
                if ((this.ContinuesRunningSecondsField.Equals(value) != true)) {
                    this.ContinuesRunningSecondsField = value;
                    this.RaisePropertyChanged("ContinuesRunningSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Counter {
            get {
                return this.CounterField;
            }
            set {
                if ((this.CounterField.Equals(value) != true)) {
                    this.CounterField = value;
                    this.RaisePropertyChanged("Counter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.DateTime CounterTime {
            get {
                return this.CounterTimeField;
            }
            set {
                if ((this.CounterTimeField.Equals(value) != true)) {
                    this.CounterTimeField = value;
                    this.RaisePropertyChanged("CounterTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.CounterState CurrentCounterState {
            get {
                return this.CurrentCounterStateField;
            }
            set {
                if ((this.CurrentCounterStateField.Equals(value) != true)) {
                    this.CurrentCounterStateField = value;
                    this.RaisePropertyChanged("CurrentCounterState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Current_Picks {
            get {
                return this.Current_PicksField;
            }
            set {
                if ((this.Current_PicksField.Equals(value) != true)) {
                    this.Current_PicksField = value;
                    this.RaisePropertyChanged("Current_Picks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Current_RPM {
            get {
                return this.Current_RPMField;
            }
            set {
                if ((this.Current_RPMField.Equals(value) != true)) {
                    this.Current_RPMField = value;
                    this.RaisePropertyChanged("Current_RPM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Current_SinkIP {
            get {
                return this.Current_SinkIPField;
            }
            set {
                if ((object.ReferenceEquals(this.Current_SinkIPField, value) != true)) {
                    this.Current_SinkIPField = value;
                    this.RaisePropertyChanged("Current_SinkIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.DateTime Current_SinkTime {
            get {
                return this.Current_SinkTimeField;
            }
            set {
                if ((this.Current_SinkTimeField.Equals(value) != true)) {
                    this.Current_SinkTimeField = value;
                    this.RaisePropertyChanged("Current_SinkTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.enMachineState Current_State {
            get {
                return this.Current_StateField;
            }
            set {
                if ((this.Current_StateField.Equals(value) != true)) {
                    this.Current_StateField = value;
                    this.RaisePropertyChanged("Current_State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataNumber {
            get {
                return this.DataNumberField;
            }
            set {
                if ((this.DataNumberField.Equals(value) != true)) {
                    this.DataNumberField = value;
                    this.RaisePropertyChanged("DataNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.enMachineLongCause LongStopCause {
            get {
                return this.LongStopCauseField;
            }
            set {
                if ((this.LongStopCauseField.Equals(value) != true)) {
                    this.LongStopCauseField = value;
                    this.RaisePropertyChanged("LongStopCause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.DateTime Session_ActualStartTime {
            get {
                return this.Session_ActualStartTimeField;
            }
            set {
                if ((this.Session_ActualStartTimeField.Equals(value) != true)) {
                    this.Session_ActualStartTimeField = value;
                    this.RaisePropertyChanged("Session_ActualStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.enMachineShortCause ShortStopCause {
            get {
                return this.ShortStopCauseField;
            }
            set {
                if ((this.ShortStopCauseField.Equals(value) != true)) {
                    this.ShortStopCauseField = value;
                    this.RaisePropertyChanged("ShortStopCause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SinkNumber {
            get {
                return this.SinkNumberField;
            }
            set {
                if ((this.SinkNumberField.Equals(value) != true)) {
                    this.SinkNumberField = value;
                    this.RaisePropertyChanged("SinkNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FixedStatistics", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class FixedStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoomCardNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoomCardParamsRequestedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecsCardNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpecsParamsRequestedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeaverIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WeaverParamsRequestedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoomCardNo {
            get {
                return this.LoomCardNoField;
            }
            set {
                if ((object.ReferenceEquals(this.LoomCardNoField, value) != true)) {
                    this.LoomCardNoField = value;
                    this.RaisePropertyChanged("LoomCardNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoomCardParamsRequested {
            get {
                return this.LoomCardParamsRequestedField;
            }
            set {
                if ((this.LoomCardParamsRequestedField.Equals(value) != true)) {
                    this.LoomCardParamsRequestedField = value;
                    this.RaisePropertyChanged("LoomCardParamsRequested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecsCardNo {
            get {
                return this.SpecsCardNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecsCardNoField, value) != true)) {
                    this.SpecsCardNoField = value;
                    this.RaisePropertyChanged("SpecsCardNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpecsParamsRequested {
            get {
                return this.SpecsParamsRequestedField;
            }
            set {
                if ((this.SpecsParamsRequestedField.Equals(value) != true)) {
                    this.SpecsParamsRequestedField = value;
                    this.RaisePropertyChanged("SpecsParamsRequested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeaverID {
            get {
                return this.WeaverIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WeaverIDField, value) != true)) {
                    this.WeaverIDField = value;
                    this.RaisePropertyChanged("WeaverID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WeaverParamsRequested {
            get {
                return this.WeaverParamsRequestedField;
            }
            set {
                if ((this.WeaverParamsRequestedField.Equals(value) != true)) {
                    this.WeaverParamsRequestedField = value;
                    this.RaisePropertyChanged("WeaverParamsRequested");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="loomShiftParams", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class loomShiftParams : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TotalDownTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.LongStopStatistics longStopDurationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.RunningStatistics runningStatisticsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.ShortStopStatistics shortStopStatisticsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TotalDownTime {
            get {
                return this.TotalDownTimeField;
            }
            set {
                if ((this.TotalDownTimeField.Equals(value) != true)) {
                    this.TotalDownTimeField = value;
                    this.RaisePropertyChanged("TotalDownTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.LongStopStatistics longStopDurations {
            get {
                return this.longStopDurationsField;
            }
            set {
                if ((object.ReferenceEquals(this.longStopDurationsField, value) != true)) {
                    this.longStopDurationsField = value;
                    this.RaisePropertyChanged("longStopDurations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.RunningStatistics runningStatistics {
            get {
                return this.runningStatisticsField;
            }
            set {
                if ((object.ReferenceEquals(this.runningStatisticsField, value) != true)) {
                    this.runningStatisticsField = value;
                    this.RaisePropertyChanged("runningStatistics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.ShortStopStatistics shortStopStatistics {
            get {
                return this.shortStopStatisticsField;
            }
            set {
                if ((object.ReferenceEquals(this.shortStopStatisticsField, value) != true)) {
                    this.shortStopStatisticsField = value;
                    this.RaisePropertyChanged("shortStopStatistics");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="loompersonalInfo", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class loompersonalInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActivatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoomNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShedIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Activated {
            get {
                return this.ActivatedField;
            }
            set {
                if ((this.ActivatedField.Equals(value) != true)) {
                    this.ActivatedField = value;
                    this.RaisePropertyChanged("Activated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoomID {
            get {
                return this.LoomIDField;
            }
            set {
                if ((this.LoomIDField.Equals(value) != true)) {
                    this.LoomIDField = value;
                    this.RaisePropertyChanged("LoomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoomName {
            get {
                return this.LoomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoomNameField, value) != true)) {
                    this.LoomNameField = value;
                    this.RaisePropertyChanged("LoomName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAC {
            get {
                return this.MACField;
            }
            set {
                if ((object.ReferenceEquals(this.MACField, value) != true)) {
                    this.MACField = value;
                    this.RaisePropertyChanged("MAC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShedID {
            get {
                return this.ShedIDField;
            }
            set {
                if ((this.ShedIDField.Equals(value) != true)) {
                    this.ShedIDField = value;
                    this.RaisePropertyChanged("ShedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionNumber {
            get {
                return this.VersionNumberField;
            }
            set {
                if ((this.VersionNumberField.Equals(value) != true)) {
                    this.VersionNumberField = value;
                    this.RaisePropertyChanged("VersionNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="loomSessionParams", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class loomSessionParams : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Session_EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Session_PicksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Session_RPMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Session_StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.DateTime Session_EndTime {
            get {
                return this.Session_EndTimeField;
            }
            set {
                if ((this.Session_EndTimeField.Equals(value) != true)) {
                    this.Session_EndTimeField = value;
                    this.RaisePropertyChanged("Session_EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Session_Picks {
            get {
                return this.Session_PicksField;
            }
            set {
                if ((this.Session_PicksField.Equals(value) != true)) {
                    this.Session_PicksField = value;
                    this.RaisePropertyChanged("Session_Picks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Session_RPM {
            get {
                return this.Session_RPMField;
            }
            set {
                if ((this.Session_RPMField.Equals(value) != true)) {
                    this.Session_RPMField = value;
                    this.RaisePropertyChanged("Session_RPM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.DateTime Session_StartTime {
            get {
                return this.Session_StartTimeField;
            }
            set {
                if ((this.Session_StartTimeField.Equals(value) != true)) {
                    this.Session_StartTimeField = value;
                    this.RaisePropertyChanged("Session_StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CounterState", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    public enum CounterState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reset = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Duplicate = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Missing = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Recovered = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SentToSerial = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SentToDevice = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="enMachineState", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    public enum enMachineState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stopped = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Running = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="enMachineLongCause", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    public enum enMachineLongCause : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mechanical = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Electrical = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Knotting = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArticleChange = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShutDown = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProgramNA = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherLong = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="enMachineShortCause", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    public enum enMachineShortCause : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warp = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weft = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Leno = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LongStopStatistics", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class LongStopStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ArticleChange_ETimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ArticleChange_LossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Electrical_ETimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Electrical_LossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Knotting_ETimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Knotting_LossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Mechanical_ETimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Mechanical_LossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OtherLong_ETimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OtherLong_LossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProgramNA_ETimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProgramNA_LossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ShutDown_ETimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ShutDown_LossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Total_ETimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Total_LossField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ArticleChange_ETime {
            get {
                return this.ArticleChange_ETimeField;
            }
            set {
                if ((this.ArticleChange_ETimeField.Equals(value) != true)) {
                    this.ArticleChange_ETimeField = value;
                    this.RaisePropertyChanged("ArticleChange_ETime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ArticleChange_Loss {
            get {
                return this.ArticleChange_LossField;
            }
            set {
                if ((this.ArticleChange_LossField.Equals(value) != true)) {
                    this.ArticleChange_LossField = value;
                    this.RaisePropertyChanged("ArticleChange_Loss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Electrical_ETime {
            get {
                return this.Electrical_ETimeField;
            }
            set {
                if ((this.Electrical_ETimeField.Equals(value) != true)) {
                    this.Electrical_ETimeField = value;
                    this.RaisePropertyChanged("Electrical_ETime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Electrical_Loss {
            get {
                return this.Electrical_LossField;
            }
            set {
                if ((this.Electrical_LossField.Equals(value) != true)) {
                    this.Electrical_LossField = value;
                    this.RaisePropertyChanged("Electrical_Loss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Knotting_ETime {
            get {
                return this.Knotting_ETimeField;
            }
            set {
                if ((this.Knotting_ETimeField.Equals(value) != true)) {
                    this.Knotting_ETimeField = value;
                    this.RaisePropertyChanged("Knotting_ETime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Knotting_Loss {
            get {
                return this.Knotting_LossField;
            }
            set {
                if ((this.Knotting_LossField.Equals(value) != true)) {
                    this.Knotting_LossField = value;
                    this.RaisePropertyChanged("Knotting_Loss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Mechanical_ETime {
            get {
                return this.Mechanical_ETimeField;
            }
            set {
                if ((this.Mechanical_ETimeField.Equals(value) != true)) {
                    this.Mechanical_ETimeField = value;
                    this.RaisePropertyChanged("Mechanical_ETime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Mechanical_Loss {
            get {
                return this.Mechanical_LossField;
            }
            set {
                if ((this.Mechanical_LossField.Equals(value) != true)) {
                    this.Mechanical_LossField = value;
                    this.RaisePropertyChanged("Mechanical_Loss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OtherLong_ETime {
            get {
                return this.OtherLong_ETimeField;
            }
            set {
                if ((this.OtherLong_ETimeField.Equals(value) != true)) {
                    this.OtherLong_ETimeField = value;
                    this.RaisePropertyChanged("OtherLong_ETime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OtherLong_Loss {
            get {
                return this.OtherLong_LossField;
            }
            set {
                if ((this.OtherLong_LossField.Equals(value) != true)) {
                    this.OtherLong_LossField = value;
                    this.RaisePropertyChanged("OtherLong_Loss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProgramNA_ETime {
            get {
                return this.ProgramNA_ETimeField;
            }
            set {
                if ((this.ProgramNA_ETimeField.Equals(value) != true)) {
                    this.ProgramNA_ETimeField = value;
                    this.RaisePropertyChanged("ProgramNA_ETime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ProgramNA_Loss {
            get {
                return this.ProgramNA_LossField;
            }
            set {
                if ((this.ProgramNA_LossField.Equals(value) != true)) {
                    this.ProgramNA_LossField = value;
                    this.RaisePropertyChanged("ProgramNA_Loss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ShutDown_ETime {
            get {
                return this.ShutDown_ETimeField;
            }
            set {
                if ((this.ShutDown_ETimeField.Equals(value) != true)) {
                    this.ShutDown_ETimeField = value;
                    this.RaisePropertyChanged("ShutDown_ETime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ShutDown_Loss {
            get {
                return this.ShutDown_LossField;
            }
            set {
                if ((this.ShutDown_LossField.Equals(value) != true)) {
                    this.ShutDown_LossField = value;
                    this.RaisePropertyChanged("ShutDown_Loss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Total_ETime {
            get {
                return this.Total_ETimeField;
            }
            set {
                if ((this.Total_ETimeField.Equals(value) != true)) {
                    this.Total_ETimeField = value;
                    this.RaisePropertyChanged("Total_ETime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Total_Loss {
            get {
                return this.Total_LossField;
            }
            set {
                if ((this.Total_LossField.Equals(value) != true)) {
                    this.Total_LossField = value;
                    this.RaisePropertyChanged("Total_Loss");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunningStatistics", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class RunningStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EfficiencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PicksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PicksShouldBeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProductionEfficiencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RPMField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Efficiency {
            get {
                return this.EfficiencyField;
            }
            set {
                if ((this.EfficiencyField.Equals(value) != true)) {
                    this.EfficiencyField = value;
                    this.RaisePropertyChanged("Efficiency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Picks {
            get {
                return this.PicksField;
            }
            set {
                if ((this.PicksField.Equals(value) != true)) {
                    this.PicksField = value;
                    this.RaisePropertyChanged("Picks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PicksShouldBe {
            get {
                return this.PicksShouldBeField;
            }
            set {
                if ((this.PicksShouldBeField.Equals(value) != true)) {
                    this.PicksShouldBeField = value;
                    this.RaisePropertyChanged("PicksShouldBe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ProductionEfficiency {
            get {
                return this.ProductionEfficiencyField;
            }
            set {
                if ((this.ProductionEfficiencyField.Equals(value) != true)) {
                    this.ProductionEfficiencyField = value;
                    this.RaisePropertyChanged("ProductionEfficiency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RPM {
            get {
                return this.RPMField;
            }
            set {
                if ((this.RPMField.Equals(value) != true)) {
                    this.RPMField = value;
                    this.RaisePropertyChanged("RPM");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShortStopStatistics", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class ShortStopStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LenoLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LenoStopsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Leno_ETimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LenoperHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OtherLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OtherStopsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Other_ETimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OtherperHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Total_ETimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WarpAvgKnotTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WarpLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WarpStopsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Warp_ETimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WarpperHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeftAvgKnotTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeftLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WeftStopsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Weft_ETimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeftperHourField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LenoLoss {
            get {
                return this.LenoLossField;
            }
            set {
                if ((this.LenoLossField.Equals(value) != true)) {
                    this.LenoLossField = value;
                    this.RaisePropertyChanged("LenoLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LenoStops {
            get {
                return this.LenoStopsField;
            }
            set {
                if ((this.LenoStopsField.Equals(value) != true)) {
                    this.LenoStopsField = value;
                    this.RaisePropertyChanged("LenoStops");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Leno_ETime {
            get {
                return this.Leno_ETimeField;
            }
            set {
                if ((this.Leno_ETimeField.Equals(value) != true)) {
                    this.Leno_ETimeField = value;
                    this.RaisePropertyChanged("Leno_ETime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LenoperHour {
            get {
                return this.LenoperHourField;
            }
            set {
                if ((this.LenoperHourField.Equals(value) != true)) {
                    this.LenoperHourField = value;
                    this.RaisePropertyChanged("LenoperHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OtherLoss {
            get {
                return this.OtherLossField;
            }
            set {
                if ((this.OtherLossField.Equals(value) != true)) {
                    this.OtherLossField = value;
                    this.RaisePropertyChanged("OtherLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OtherStops {
            get {
                return this.OtherStopsField;
            }
            set {
                if ((this.OtherStopsField.Equals(value) != true)) {
                    this.OtherStopsField = value;
                    this.RaisePropertyChanged("OtherStops");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Other_ETime {
            get {
                return this.Other_ETimeField;
            }
            set {
                if ((this.Other_ETimeField.Equals(value) != true)) {
                    this.Other_ETimeField = value;
                    this.RaisePropertyChanged("Other_ETime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OtherperHour {
            get {
                return this.OtherperHourField;
            }
            set {
                if ((this.OtherperHourField.Equals(value) != true)) {
                    this.OtherperHourField = value;
                    this.RaisePropertyChanged("OtherperHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalLoss {
            get {
                return this.TotalLossField;
            }
            set {
                if ((this.TotalLossField.Equals(value) != true)) {
                    this.TotalLossField = value;
                    this.RaisePropertyChanged("TotalLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Total_ETime {
            get {
                return this.Total_ETimeField;
            }
            set {
                if ((this.Total_ETimeField.Equals(value) != true)) {
                    this.Total_ETimeField = value;
                    this.RaisePropertyChanged("Total_ETime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WarpAvgKnotTime {
            get {
                return this.WarpAvgKnotTimeField;
            }
            set {
                if ((this.WarpAvgKnotTimeField.Equals(value) != true)) {
                    this.WarpAvgKnotTimeField = value;
                    this.RaisePropertyChanged("WarpAvgKnotTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WarpLoss {
            get {
                return this.WarpLossField;
            }
            set {
                if ((this.WarpLossField.Equals(value) != true)) {
                    this.WarpLossField = value;
                    this.RaisePropertyChanged("WarpLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WarpStops {
            get {
                return this.WarpStopsField;
            }
            set {
                if ((this.WarpStopsField.Equals(value) != true)) {
                    this.WarpStopsField = value;
                    this.RaisePropertyChanged("WarpStops");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Warp_ETime {
            get {
                return this.Warp_ETimeField;
            }
            set {
                if ((this.Warp_ETimeField.Equals(value) != true)) {
                    this.Warp_ETimeField = value;
                    this.RaisePropertyChanged("Warp_ETime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WarpperHour {
            get {
                return this.WarpperHourField;
            }
            set {
                if ((this.WarpperHourField.Equals(value) != true)) {
                    this.WarpperHourField = value;
                    this.RaisePropertyChanged("WarpperHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WeftAvgKnotTime {
            get {
                return this.WeftAvgKnotTimeField;
            }
            set {
                if ((this.WeftAvgKnotTimeField.Equals(value) != true)) {
                    this.WeftAvgKnotTimeField = value;
                    this.RaisePropertyChanged("WeftAvgKnotTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WeftLoss {
            get {
                return this.WeftLossField;
            }
            set {
                if ((this.WeftLossField.Equals(value) != true)) {
                    this.WeftLossField = value;
                    this.RaisePropertyChanged("WeftLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WeftStops {
            get {
                return this.WeftStopsField;
            }
            set {
                if ((this.WeftStopsField.Equals(value) != true)) {
                    this.WeftStopsField = value;
                    this.RaisePropertyChanged("WeftStops");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Weft_ETime {
            get {
                return this.Weft_ETimeField;
            }
            set {
                if ((this.Weft_ETimeField.Equals(value) != true)) {
                    this.Weft_ETimeField = value;
                    this.RaisePropertyChanged("Weft_ETime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WeftperHour {
            get {
                return this.WeftperHourField;
            }
            set {
                if ((this.WeftperHourField.Equals(value) != true)) {
                    this.WeftperHourField = value;
                    this.RaisePropertyChanged("WeftperHour");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Alert", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class Alert : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlertNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string alertCaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string alertTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.AlertType alertTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlertNumber {
            get {
                return this.AlertNumberField;
            }
            set {
                if ((this.AlertNumberField.Equals(value) != true)) {
                    this.AlertNumberField = value;
                    this.RaisePropertyChanged("AlertNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string alertCaption {
            get {
                return this.alertCaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.alertCaptionField, value) != true)) {
                    this.alertCaptionField = value;
                    this.RaisePropertyChanged("alertCaption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string alertText {
            get {
                return this.alertTextField;
            }
            set {
                if ((object.ReferenceEquals(this.alertTextField, value) != true)) {
                    this.alertTextField = value;
                    this.RaisePropertyChanged("alertText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.AlertType alertType {
            get {
                return this.alertTypeField;
            }
            set {
                if ((this.alertTypeField.Equals(value) != true)) {
                    this.alertTypeField = value;
                    this.RaisePropertyChanged("alertType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sinkLoomInfo", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class sinkLoomInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CounterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CounterTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.enMachineLongCause LongStopCauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PicksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RPMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.enMachineShortCause ShortStopCauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SinkIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.enMachineState StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.CounterState counterStateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Counter {
            get {
                return this.CounterField;
            }
            set {
                if ((this.CounterField.Equals(value) != true)) {
                    this.CounterField = value;
                    this.RaisePropertyChanged("Counter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.DateTime CounterTime {
            get {
                return this.CounterTimeField;
            }
            set {
                if ((this.CounterTimeField.Equals(value) != true)) {
                    this.CounterTimeField = value;
                    this.RaisePropertyChanged("CounterTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataNumber {
            get {
                return this.DataNumberField;
            }
            set {
                if ((this.DataNumberField.Equals(value) != true)) {
                    this.DataNumberField = value;
                    this.RaisePropertyChanged("DataNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.enMachineLongCause LongStopCause {
            get {
                return this.LongStopCauseField;
            }
            set {
                if ((this.LongStopCauseField.Equals(value) != true)) {
                    this.LongStopCauseField = value;
                    this.RaisePropertyChanged("LongStopCause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoomID {
            get {
                return this.LoomIDField;
            }
            set {
                if ((this.LoomIDField.Equals(value) != true)) {
                    this.LoomIDField = value;
                    this.RaisePropertyChanged("LoomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAC {
            get {
                return this.MACField;
            }
            set {
                if ((object.ReferenceEquals(this.MACField, value) != true)) {
                    this.MACField = value;
                    this.RaisePropertyChanged("MAC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Picks {
            get {
                return this.PicksField;
            }
            set {
                if ((this.PicksField.Equals(value) != true)) {
                    this.PicksField = value;
                    this.RaisePropertyChanged("Picks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RPM {
            get {
                return this.RPMField;
            }
            set {
                if ((this.RPMField.Equals(value) != true)) {
                    this.RPMField = value;
                    this.RaisePropertyChanged("RPM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.enMachineShortCause ShortStopCause {
            get {
                return this.ShortStopCauseField;
            }
            set {
                if ((this.ShortStopCauseField.Equals(value) != true)) {
                    this.ShortStopCauseField = value;
                    this.RaisePropertyChanged("ShortStopCause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SinkIP {
            get {
                return this.SinkIPField;
            }
            set {
                if ((object.ReferenceEquals(this.SinkIPField, value) != true)) {
                    this.SinkIPField = value;
                    this.RaisePropertyChanged("SinkIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.enMachineState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.CounterState counterState {
            get {
                return this.counterStateField;
            }
            set {
                if ((this.counterStateField.Equals(value) != true)) {
                    this.counterStateField = value;
                    this.RaisePropertyChanged("counterState");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlertType", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    public enum AlertType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="devicepublicinfo", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class devicepublicinfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.deviceDisplayInfo DisplayInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFService.MachineEyes.devicePersonalInfo PersonalInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.deviceDisplayInfo DisplayInfo {
            get {
                return this.DisplayInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayInfoField, value) != true)) {
                    this.DisplayInfoField = value;
                    this.RaisePropertyChanged("DisplayInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFService.MachineEyes.devicePersonalInfo PersonalInfo {
            get {
                return this.PersonalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalInfoField, value) != true)) {
                    this.PersonalInfoField = value;
                    this.RaisePropertyChanged("PersonalInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="deviceDisplayInfo", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class deviceDisplayInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentArrayIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CurrentStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastMsgTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sendStringField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentArrayIndex {
            get {
                return this.CurrentArrayIndexField;
            }
            set {
                if ((this.CurrentArrayIndexField.Equals(value) != true)) {
                    this.CurrentArrayIndexField = value;
                    this.RaisePropertyChanged("CurrentArrayIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] CurrentString {
            get {
                return this.CurrentStringField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentStringField, value) != true)) {
                    this.CurrentStringField = value;
                    this.RaisePropertyChanged("CurrentString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.DateTime LastMsgTime {
            get {
                return this.LastMsgTimeField;
            }
            set {
                if ((this.LastMsgTimeField.Equals(value) != true)) {
                    this.LastMsgTimeField = value;
                    this.RaisePropertyChanged("LastMsgTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sendString {
            get {
                return this.sendStringField;
            }
            set {
                if ((object.ReferenceEquals(this.sendStringField, value) != true)) {
                    this.sendStringField = value;
                    this.RaisePropertyChanged("sendString");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="devicePersonalInfo", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class devicePersonalInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EfficiencyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PauseSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemotePortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShedIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isEnabledField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIDField, value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EfficiencyType {
            get {
                return this.EfficiencyTypeField;
            }
            set {
                if ((this.EfficiencyTypeField.Equals(value) != true)) {
                    this.EfficiencyTypeField = value;
                    this.RaisePropertyChanged("EfficiencyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MAC {
            get {
                return this.MACField;
            }
            set {
                if ((object.ReferenceEquals(this.MACField, value) != true)) {
                    this.MACField = value;
                    this.RaisePropertyChanged("MAC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeID {
            get {
                return this.NodeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeIDField, value) != true)) {
                    this.NodeIDField = value;
                    this.RaisePropertyChanged("NodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PauseSeconds {
            get {
                return this.PauseSecondsField;
            }
            set {
                if ((this.PauseSecondsField.Equals(value) != true)) {
                    this.PauseSecondsField = value;
                    this.RaisePropertyChanged("PauseSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemotePort {
            get {
                return this.RemotePortField;
            }
            set {
                if ((this.RemotePortField.Equals(value) != true)) {
                    this.RemotePortField = value;
                    this.RaisePropertyChanged("RemotePort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShedID {
            get {
                return this.ShedIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ShedIDField, value) != true)) {
                    this.ShedIDField = value;
                    this.RaisePropertyChanged("ShedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isEnabled {
            get {
                return this.isEnabledField;
            }
            set {
                if ((this.isEnabledField.Equals(value) != true)) {
                    this.isEnabledField = value;
                    this.RaisePropertyChanged("isEnabled");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayBoardsClientListInfo", Namespace="http://schemas.datacontract.org/2004/07/MachineEyesCore")]
    [System.SerializableAttribute()]
    public partial class DisplayBoardsClientListInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HandleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SocketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeWhenConnectionEstablishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeWhenDataSentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataNumber {
            get {
                return this.DataNumberField;
            }
            set {
                if ((this.DataNumberField.Equals(value) != true)) {
                    this.DataNumberField = value;
                    this.RaisePropertyChanged("DataNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Handle {
            get {
                return this.HandleField;
            }
            set {
                if ((object.ReferenceEquals(this.HandleField, value) != true)) {
                    this.HandleField = value;
                    this.RaisePropertyChanged("Handle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Socket {
            get {
                return this.SocketField;
            }
            set {
                if ((object.ReferenceEquals(this.SocketField, value) != true)) {
                    this.SocketField = value;
                    this.RaisePropertyChanged("Socket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.DateTime TimeWhenConnectionEstablished {
            get {
                return this.TimeWhenConnectionEstablishedField;
            }
            set {
                if ((this.TimeWhenConnectionEstablishedField.Equals(value) != true)) {
                    this.TimeWhenConnectionEstablishedField = value;
                    this.RaisePropertyChanged("TimeWhenConnectionEstablished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.DateTime TimeWhenDataSent {
            get {
                return this.TimeWhenDataSentField;
            }
            set {
                if ((this.TimeWhenDataSentField.Equals(value) != true)) {
                    this.TimeWhenDataSentField = value;
                    this.RaisePropertyChanged("TimeWhenDataSent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MachineEyes.IMachineEyesService")]
    public interface IMachineEyesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Security_GetPassword", ReplyAction="http://tempuri.org/IMachineEyesService/Security_GetPasswordResponse")]
        string Security_GetPassword(string UserID, string Password, string UserKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Security_GetPassword", ReplyAction="http://tempuri.org/IMachineEyesService/Security_GetPasswordResponse")]
        System.Threading.Tasks.Task<string> Security_GetPasswordAsync(string UserID, string Password, string UserKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Security_UserLogin", ReplyAction="http://tempuri.org/IMachineEyesService/Security_UserLoginResponse")]
        string Security_UserLogin(string UserId, string Password, string UserKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Security_UserLogin", ReplyAction="http://tempuri.org/IMachineEyesService/Security_UserLoginResponse")]
        System.Threading.Tasks.Task<string> Security_UserLoginAsync(string UserId, string Password, string UserKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_ServiceStartTime", ReplyAction="http://tempuri.org/IMachineEyesService/Get_ServiceStartTimeResponse")]
        string Get_ServiceStartTime(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_ServiceStartTime", ReplyAction="http://tempuri.org/IMachineEyesService/Get_ServiceStartTimeResponse")]
        System.Threading.Tasks.Task<string> Get_ServiceStartTimeAsync(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_Sheds", ReplyAction="http://tempuri.org/IMachineEyesService/Get_ShedsResponse")]
        WCFService.MachineEyes.Sheds[] Get_Sheds(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_Sheds", ReplyAction="http://tempuri.org/IMachineEyesService/Get_ShedsResponse")]
        System.Threading.Tasks.Task<WCFService.MachineEyes.Sheds[]> Get_ShedsAsync(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_CoordinatorsList", ReplyAction="http://tempuri.org/IMachineEyesService/Get_CoordinatorsListResponse")]
        WCFService.MachineEyes.ClientListInfo[] Get_CoordinatorsList(string SessionKey, int DataNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_CoordinatorsList", ReplyAction="http://tempuri.org/IMachineEyesService/Get_CoordinatorsListResponse")]
        System.Threading.Tasks.Task<WCFService.MachineEyes.ClientListInfo[]> Get_CoordinatorsListAsync(string SessionKey, int DataNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_LoomsDataByShedID", ReplyAction="http://tempuri.org/IMachineEyesService/Get_LoomsDataByShedIDResponse")]
        System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.LoomCollectiveInfo> Get_LoomsDataByShedID(string SessionKey, int ShedID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_LoomsDataByShedID", ReplyAction="http://tempuri.org/IMachineEyesService/Get_LoomsDataByShedIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.LoomCollectiveInfo>> Get_LoomsDataByShedIDAsync(string SessionKey, int ShedID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_LoomsSumUpInfo", ReplyAction="http://tempuri.org/IMachineEyesService/Get_LoomsSumUpInfoResponse")]
        System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.LoomSumUpInfo> Get_LoomsSumUpInfo(string SessionKey, int ShedID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_LoomsSumUpInfo", ReplyAction="http://tempuri.org/IMachineEyesService/Get_LoomsSumUpInfoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.LoomSumUpInfo>> Get_LoomsSumUpInfoAsync(string SessionKey, int ShedID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_LoomsCurrentParams", ReplyAction="http://tempuri.org/IMachineEyesService/Get_LoomsCurrentParamsResponse")]
        System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.loomcurrentParams> Get_LoomsCurrentParams(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_LoomsCurrentParams", ReplyAction="http://tempuri.org/IMachineEyesService/Get_LoomsCurrentParamsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.loomcurrentParams>> Get_LoomsCurrentParamsAsync(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_LoomsShiftParams", ReplyAction="http://tempuri.org/IMachineEyesService/Get_LoomsShiftParamsResponse")]
        System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.loomShiftParams> Get_LoomsShiftParams(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_LoomsShiftParams", ReplyAction="http://tempuri.org/IMachineEyesService/Get_LoomsShiftParamsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.loomShiftParams>> Get_LoomsShiftParamsAsync(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_LoomsData", ReplyAction="http://tempuri.org/IMachineEyesService/Get_LoomsDataResponse")]
        System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.LoomCollectiveInfo> Get_LoomsData(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_LoomsData", ReplyAction="http://tempuri.org/IMachineEyesService/Get_LoomsDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.LoomCollectiveInfo>> Get_LoomsDataAsync(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_LoomData", ReplyAction="http://tempuri.org/IMachineEyesService/Get_LoomDataResponse")]
        WCFService.MachineEyes.LoomCollectiveInfo Get_LoomData(string SessionKey, string MAC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_LoomData", ReplyAction="http://tempuri.org/IMachineEyesService/Get_LoomDataResponse")]
        System.Threading.Tasks.Task<WCFService.MachineEyes.LoomCollectiveInfo> Get_LoomDataAsync(string SessionKey, string MAC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_DataSet", ReplyAction="http://tempuri.org/IMachineEyesService/Get_DataSetResponse")]
        System.Data.DataSet Get_DataSet(string SessionKey, string Query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_DataSet", ReplyAction="http://tempuri.org/IMachineEyesService/Get_DataSetResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> Get_DataSetAsync(string SessionKey, string Query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/UpdateLoom_MAC", ReplyAction="http://tempuri.org/IMachineEyesService/UpdateLoom_MACResponse")]
        string UpdateLoom_MAC(string SessionKey, string OldMAC, string NewMAC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/UpdateLoom_MAC", ReplyAction="http://tempuri.org/IMachineEyesService/UpdateLoom_MACResponse")]
        System.Threading.Tasks.Task<string> UpdateLoom_MACAsync(string SessionKey, string OldMAC, string NewMAC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Set_ExecuteQuey", ReplyAction="http://tempuri.org/IMachineEyesService/Set_ExecuteQueyResponse")]
        string Set_ExecuteQuey(string SessionKey, string Query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Set_ExecuteQuey", ReplyAction="http://tempuri.org/IMachineEyesService/Set_ExecuteQueyResponse")]
        System.Threading.Tasks.Task<string> Set_ExecuteQueyAsync(string SessionKey, string Query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Set_ExecuteTransaction", ReplyAction="http://tempuri.org/IMachineEyesService/Set_ExecuteTransactionResponse")]
        string Set_ExecuteTransaction(string SessionKey, string[] Queries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Set_ExecuteTransaction", ReplyAction="http://tempuri.org/IMachineEyesService/Set_ExecuteTransactionResponse")]
        System.Threading.Tasks.Task<string> Set_ExecuteTransactionAsync(string SessionKey, string[] Queries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Refresh_Settings", ReplyAction="http://tempuri.org/IMachineEyesService/Refresh_SettingsResponse")]
        string Refresh_Settings(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Refresh_Settings", ReplyAction="http://tempuri.org/IMachineEyesService/Refresh_SettingsResponse")]
        System.Threading.Tasks.Task<string> Refresh_SettingsAsync(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_Alerts", ReplyAction="http://tempuri.org/IMachineEyesService/Get_AlertsResponse")]
        System.Collections.Generic.Dictionary<int, WCFService.MachineEyes.Alert> Get_Alerts(string SessionKey, int AlertNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_Alerts", ReplyAction="http://tempuri.org/IMachineEyesService/Get_AlertsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, WCFService.MachineEyes.Alert>> Get_AlertsAsync(string SessionKey, int AlertNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_UnKnownMACData", ReplyAction="http://tempuri.org/IMachineEyesService/Get_UnKnownMACDataResponse")]
        WCFService.MachineEyes.sinkLoomInfo Get_UnKnownMACData(string SessionKey, int DataNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_UnKnownMACData", ReplyAction="http://tempuri.org/IMachineEyesService/Get_UnKnownMACDataResponse")]
        System.Threading.Tasks.Task<WCFService.MachineEyes.sinkLoomInfo> Get_UnKnownMACDataAsync(string SessionKey, int DataNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_Device", ReplyAction="http://tempuri.org/IMachineEyesService/Get_DeviceResponse")]
        WCFService.MachineEyes.devicepublicinfo Get_Device(string SessionKey, int IndexNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_Device", ReplyAction="http://tempuri.org/IMachineEyesService/Get_DeviceResponse")]
        System.Threading.Tasks.Task<WCFService.MachineEyes.devicepublicinfo> Get_DeviceAsync(string SessionKey, int IndexNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_DevicesTotal", ReplyAction="http://tempuri.org/IMachineEyesService/Get_DevicesTotalResponse")]
        int Get_DevicesTotal(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_DevicesTotal", ReplyAction="http://tempuri.org/IMachineEyesService/Get_DevicesTotalResponse")]
        System.Threading.Tasks.Task<int> Get_DevicesTotalAsync(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_DeviceConnections", ReplyAction="http://tempuri.org/IMachineEyesService/Get_DeviceConnectionsResponse")]
        WCFService.MachineEyes.DisplayBoardsClientListInfo[] Get_DeviceConnections(string SessionKey, int IndexNo, int DataNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_DeviceConnections", ReplyAction="http://tempuri.org/IMachineEyesService/Get_DeviceConnectionsResponse")]
        System.Threading.Tasks.Task<WCFService.MachineEyes.DisplayBoardsClientListInfo[]> Get_DeviceConnectionsAsync(string SessionKey, int IndexNo, int DataNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_ServerTime", ReplyAction="http://tempuri.org/IMachineEyesService/Get_ServerTimeResponse")]
        System.DateTime Get_ServerTime(string SessionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineEyesService/Get_ServerTime", ReplyAction="http://tempuri.org/IMachineEyesService/Get_ServerTimeResponse")]
        System.Threading.Tasks.Task<System.DateTime> Get_ServerTimeAsync(string SessionKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMachineEyesServiceChannel : WCFService.MachineEyes.IMachineEyesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MachineEyesServiceClient : System.ServiceModel.ClientBase<WCFService.MachineEyes.IMachineEyesService>, WCFService.MachineEyes.IMachineEyesService {
        
        public MachineEyesServiceClient() {
        }
        
        public MachineEyesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MachineEyesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MachineEyesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MachineEyesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Security_GetPassword(string UserID, string Password, string UserKey) {
            return base.Channel.Security_GetPassword(UserID, Password, UserKey);
        }
        
        public System.Threading.Tasks.Task<string> Security_GetPasswordAsync(string UserID, string Password, string UserKey) {
            return base.Channel.Security_GetPasswordAsync(UserID, Password, UserKey);
        }
        
        public string Security_UserLogin(string UserId, string Password, string UserKey) {
            return base.Channel.Security_UserLogin(UserId, Password, UserKey);
        }
        
        public System.Threading.Tasks.Task<string> Security_UserLoginAsync(string UserId, string Password, string UserKey) {
            return base.Channel.Security_UserLoginAsync(UserId, Password, UserKey);
        }
        
        public string Get_ServiceStartTime(string SessionKey) {
            return base.Channel.Get_ServiceStartTime(SessionKey);
        }
        
        public System.Threading.Tasks.Task<string> Get_ServiceStartTimeAsync(string SessionKey) {
            return base.Channel.Get_ServiceStartTimeAsync(SessionKey);
        }
        
        public WCFService.MachineEyes.Sheds[] Get_Sheds(string SessionKey) {
            return base.Channel.Get_Sheds(SessionKey);
        }
        
        public System.Threading.Tasks.Task<WCFService.MachineEyes.Sheds[]> Get_ShedsAsync(string SessionKey) {
            return base.Channel.Get_ShedsAsync(SessionKey);
        }
        
        public WCFService.MachineEyes.ClientListInfo[] Get_CoordinatorsList(string SessionKey, int DataNumber) {
            return base.Channel.Get_CoordinatorsList(SessionKey, DataNumber);
        }
        
        public System.Threading.Tasks.Task<WCFService.MachineEyes.ClientListInfo[]> Get_CoordinatorsListAsync(string SessionKey, int DataNumber) {
            return base.Channel.Get_CoordinatorsListAsync(SessionKey, DataNumber);
        }
        
        public System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.LoomCollectiveInfo> Get_LoomsDataByShedID(string SessionKey, int ShedID) {
            return base.Channel.Get_LoomsDataByShedID(SessionKey, ShedID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.LoomCollectiveInfo>> Get_LoomsDataByShedIDAsync(string SessionKey, int ShedID) {
            return base.Channel.Get_LoomsDataByShedIDAsync(SessionKey, ShedID);
        }
        
        public System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.LoomSumUpInfo> Get_LoomsSumUpInfo(string SessionKey, int ShedID) {
            return base.Channel.Get_LoomsSumUpInfo(SessionKey, ShedID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.LoomSumUpInfo>> Get_LoomsSumUpInfoAsync(string SessionKey, int ShedID) {
            return base.Channel.Get_LoomsSumUpInfoAsync(SessionKey, ShedID);
        }
        
        public System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.loomcurrentParams> Get_LoomsCurrentParams(string SessionKey) {
            return base.Channel.Get_LoomsCurrentParams(SessionKey);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.loomcurrentParams>> Get_LoomsCurrentParamsAsync(string SessionKey) {
            return base.Channel.Get_LoomsCurrentParamsAsync(SessionKey);
        }
        
        public System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.loomShiftParams> Get_LoomsShiftParams(string SessionKey) {
            return base.Channel.Get_LoomsShiftParams(SessionKey);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.loomShiftParams>> Get_LoomsShiftParamsAsync(string SessionKey) {
            return base.Channel.Get_LoomsShiftParamsAsync(SessionKey);
        }
        
        public System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.LoomCollectiveInfo> Get_LoomsData(string SessionKey) {
            return base.Channel.Get_LoomsData(SessionKey);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, WCFService.MachineEyes.LoomCollectiveInfo>> Get_LoomsDataAsync(string SessionKey) {
            return base.Channel.Get_LoomsDataAsync(SessionKey);
        }
        
        public WCFService.MachineEyes.LoomCollectiveInfo Get_LoomData(string SessionKey, string MAC) {
            return base.Channel.Get_LoomData(SessionKey, MAC);
        }
        
        public System.Threading.Tasks.Task<WCFService.MachineEyes.LoomCollectiveInfo> Get_LoomDataAsync(string SessionKey, string MAC) {
            return base.Channel.Get_LoomDataAsync(SessionKey, MAC);
        }
        
        public System.Data.DataSet Get_DataSet(string SessionKey, string Query) {
            return base.Channel.Get_DataSet(SessionKey, Query);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Get_DataSetAsync(string SessionKey, string Query) {
            return base.Channel.Get_DataSetAsync(SessionKey, Query);
        }
        
        public string UpdateLoom_MAC(string SessionKey, string OldMAC, string NewMAC) {
            return base.Channel.UpdateLoom_MAC(SessionKey, OldMAC, NewMAC);
        }
        
        public System.Threading.Tasks.Task<string> UpdateLoom_MACAsync(string SessionKey, string OldMAC, string NewMAC) {
            return base.Channel.UpdateLoom_MACAsync(SessionKey, OldMAC, NewMAC);
        }
        
        public string Set_ExecuteQuey(string SessionKey, string Query) {
            return base.Channel.Set_ExecuteQuey(SessionKey, Query);
        }
        
        public System.Threading.Tasks.Task<string> Set_ExecuteQueyAsync(string SessionKey, string Query) {
            return base.Channel.Set_ExecuteQueyAsync(SessionKey, Query);
        }
        
        public string Set_ExecuteTransaction(string SessionKey, string[] Queries) {
            return base.Channel.Set_ExecuteTransaction(SessionKey, Queries);
        }
        
        public System.Threading.Tasks.Task<string> Set_ExecuteTransactionAsync(string SessionKey, string[] Queries) {
            return base.Channel.Set_ExecuteTransactionAsync(SessionKey, Queries);
        }
        
        public string Refresh_Settings(string SessionKey) {
            return base.Channel.Refresh_Settings(SessionKey);
        }
        
        public System.Threading.Tasks.Task<string> Refresh_SettingsAsync(string SessionKey) {
            return base.Channel.Refresh_SettingsAsync(SessionKey);
        }
        
        public System.Collections.Generic.Dictionary<int, WCFService.MachineEyes.Alert> Get_Alerts(string SessionKey, int AlertNumber) {
            return base.Channel.Get_Alerts(SessionKey, AlertNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, WCFService.MachineEyes.Alert>> Get_AlertsAsync(string SessionKey, int AlertNumber) {
            return base.Channel.Get_AlertsAsync(SessionKey, AlertNumber);
        }
        
        public WCFService.MachineEyes.sinkLoomInfo Get_UnKnownMACData(string SessionKey, int DataNumber) {
            return base.Channel.Get_UnKnownMACData(SessionKey, DataNumber);
        }
        
        public System.Threading.Tasks.Task<WCFService.MachineEyes.sinkLoomInfo> Get_UnKnownMACDataAsync(string SessionKey, int DataNumber) {
            return base.Channel.Get_UnKnownMACDataAsync(SessionKey, DataNumber);
        }
        
        public WCFService.MachineEyes.devicepublicinfo Get_Device(string SessionKey, int IndexNo) {
            return base.Channel.Get_Device(SessionKey, IndexNo);
        }
        
        public System.Threading.Tasks.Task<WCFService.MachineEyes.devicepublicinfo> Get_DeviceAsync(string SessionKey, int IndexNo) {
            return base.Channel.Get_DeviceAsync(SessionKey, IndexNo);
        }
        
        public int Get_DevicesTotal(string SessionKey) {
            return base.Channel.Get_DevicesTotal(SessionKey);
        }
        
        public System.Threading.Tasks.Task<int> Get_DevicesTotalAsync(string SessionKey) {
            return base.Channel.Get_DevicesTotalAsync(SessionKey);
        }
        
        public WCFService.MachineEyes.DisplayBoardsClientListInfo[] Get_DeviceConnections(string SessionKey, int IndexNo, int DataNumber) {
            return base.Channel.Get_DeviceConnections(SessionKey, IndexNo, DataNumber);
        }
        
        public System.Threading.Tasks.Task<WCFService.MachineEyes.DisplayBoardsClientListInfo[]> Get_DeviceConnectionsAsync(string SessionKey, int IndexNo, int DataNumber) {
            return base.Channel.Get_DeviceConnectionsAsync(SessionKey, IndexNo, DataNumber);
        }
        
        public System.DateTime Get_ServerTime(string SessionKey) {
            return base.Channel.Get_ServerTime(SessionKey);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> Get_ServerTimeAsync(string SessionKey) {
            return base.Channel.Get_ServerTimeAsync(SessionKey);
        }
    }
}
